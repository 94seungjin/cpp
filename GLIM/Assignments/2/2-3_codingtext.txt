#include <vector>
#include <map>
#include <cmath>
#include <algorithm>

using namespace std;

int solution(int a, int b, int c, int d)
{    
    vector<int> dice = {a, b, c, d};
    map<int, int> freq;
    for (int num : dice)
    {
        freq[num]++;
    }
    
    if (freq.size() == 1)
    {    
        return 1111 * a;
    }
    else if (freq.size() == 2)
    {
        
        auto it = freq.begin();
        int p = it->first;
        int count_p = it->second;
        int q = (++it)->first;
        int count_q = it->second;

        if (count_p == 3 || count_q == 3)
        {        
            int main = (count_p == 3) ? p : q;
            int other = (count_p == 1) ? p : q;
            return pow((10 * main + other), 2);
        }
        else
        {        
            return (p + q) * abs(p - q);
        }
    }
    else if (freq.size() == 3)
    {
        int q = 0, r = 0;
        for (auto [key, value] : freq)
        {
            if (value == 1)
            {
                if (q == 0) q = key;
                else r = key;
            }
        }
        return q * r;
    }
    else
    {    
        return min({a, b, c, d});
    }
}
